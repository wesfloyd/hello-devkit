// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package TaskMailbox

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// BN254G1Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G1Point struct {
	X *big.Int
	Y *big.Int
}

// BN254G2Point is an auto generated low-level Go binding around an user-defined struct.
type BN254G2Point struct {
	X [2]*big.Int
	Y [2]*big.Int
}

// IBN254CertificateVerifierBN254Certificate is an auto generated low-level Go binding around an user-defined struct.
type IBN254CertificateVerifierBN254Certificate struct {
	ReferenceTimestamp uint32
	MessageHash        [32]byte
	Sig                BN254G1Point
	Apk                BN254G2Point
	NonsignerIndices   []uint32
	NonSignerWitnesses []IBN254CertificateVerifierBN254OperatorInfoWitness
}

// IBN254CertificateVerifierBN254OperatorInfo is an auto generated low-level Go binding around an user-defined struct.
type IBN254CertificateVerifierBN254OperatorInfo struct {
	Pubkey  BN254G1Point
	Weights []*big.Int
}

// IBN254CertificateVerifierBN254OperatorInfoWitness is an auto generated low-level Go binding around an user-defined struct.
type IBN254CertificateVerifierBN254OperatorInfoWitness struct {
	OperatorIndex      uint32
	OperatorInfoProofs []byte
	OperatorInfo       IBN254CertificateVerifierBN254OperatorInfo
}

// ITaskMailboxTypesAvsConfig is an auto generated low-level Go binding around an user-defined struct.
type ITaskMailboxTypesAvsConfig struct {
	AggregatorOperatorSetId uint32
	ExecutorOperatorSetIds  []uint32
}

// ITaskMailboxTypesExecutorOperatorSetTaskConfig is an auto generated low-level Go binding around an user-defined struct.
type ITaskMailboxTypesExecutorOperatorSetTaskConfig struct {
	CertificateVerifier      common.Address
	TaskHook                 common.Address
	FeeToken                 common.Address
	FeeCollector             common.Address
	TaskSLA                  *big.Int
	StakeProportionThreshold uint16
	TaskMetadata             []byte
}

// ITaskMailboxTypesTask is an auto generated low-level Go binding around an user-defined struct.
type ITaskMailboxTypesTask struct {
	Creator                       common.Address
	CreationTime                  *big.Int
	Status                        uint8
	Avs                           common.Address
	ExecutorOperatorSetId         uint32
	AggregatorOperatorSetId       uint32
	RefundCollector               common.Address
	AvsFee                        *big.Int
	FeeSplit                      uint16
	ExecutorOperatorSetTaskConfig ITaskMailboxTypesExecutorOperatorSetTaskConfig
	Payload                       []byte
	Result                        []byte
}

// ITaskMailboxTypesTaskParams is an auto generated low-level Go binding around an user-defined struct.
type ITaskMailboxTypesTaskParams struct {
	RefundCollector     common.Address
	AvsFee              *big.Int
	ExecutorOperatorSet OperatorSet
	Payload             []byte
}

// OperatorSet is an auto generated low-level Go binding around an user-defined struct.
type OperatorSet struct {
	Avs common.Address
	Id  uint32
}

// TaskMailboxMetaData contains all meta data concerning the TaskMailbox contract.
var TaskMailboxMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"function\",\"name\":\"avsConfigs\",\"inputs\":[{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"aggregatorOperatorSetId\",\"type\":\"uint32\",\"internalType\":\"uint32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"cancelTask\",\"inputs\":[{\"name\":\"taskHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"createTask\",\"inputs\":[{\"name\":\"taskParams\",\"type\":\"tuple\",\"internalType\":\"structITaskMailboxTypes.TaskParams\",\"components\":[{\"name\":\"refundCollector\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"avsFee\",\"type\":\"uint96\",\"internalType\":\"uint96\"},{\"name\":\"executorOperatorSet\",\"type\":\"tuple\",\"internalType\":\"structOperatorSet\",\"components\":[{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"id\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]},{\"name\":\"payload\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"executorOperatorSetTaskConfigs\",\"inputs\":[{\"name\":\"operatorSetKey\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"certificateVerifier\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskHook\",\"type\":\"address\",\"internalType\":\"contractIAVSTaskHook\"},{\"name\":\"feeToken\",\"type\":\"address\",\"internalType\":\"contractIERC20\"},{\"name\":\"feeCollector\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskSLA\",\"type\":\"uint96\",\"internalType\":\"uint96\"},{\"name\":\"stakeProportionThreshold\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"taskMetadata\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getAvsConfig\",\"inputs\":[{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structITaskMailboxTypes.AvsConfig\",\"components\":[{\"name\":\"aggregatorOperatorSetId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"executorOperatorSetIds\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getExecutorOperatorSetTaskConfig\",\"inputs\":[{\"name\":\"operatorSet\",\"type\":\"tuple\",\"internalType\":\"structOperatorSet\",\"components\":[{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"id\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structITaskMailboxTypes.ExecutorOperatorSetTaskConfig\",\"components\":[{\"name\":\"certificateVerifier\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskHook\",\"type\":\"address\",\"internalType\":\"contractIAVSTaskHook\"},{\"name\":\"feeToken\",\"type\":\"address\",\"internalType\":\"contractIERC20\"},{\"name\":\"feeCollector\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskSLA\",\"type\":\"uint96\",\"internalType\":\"uint96\"},{\"name\":\"stakeProportionThreshold\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"taskMetadata\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getTaskInfo\",\"inputs\":[{\"name\":\"taskHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"tuple\",\"internalType\":\"structITaskMailboxTypes.Task\",\"components\":[{\"name\":\"creator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"creationTime\",\"type\":\"uint96\",\"internalType\":\"uint96\"},{\"name\":\"status\",\"type\":\"uint8\",\"internalType\":\"enumITaskMailboxTypes.TaskStatus\"},{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"executorOperatorSetId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"aggregatorOperatorSetId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"refundCollector\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"avsFee\",\"type\":\"uint96\",\"internalType\":\"uint96\"},{\"name\":\"feeSplit\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"executorOperatorSetTaskConfig\",\"type\":\"tuple\",\"internalType\":\"structITaskMailboxTypes.ExecutorOperatorSetTaskConfig\",\"components\":[{\"name\":\"certificateVerifier\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskHook\",\"type\":\"address\",\"internalType\":\"contractIAVSTaskHook\"},{\"name\":\"feeToken\",\"type\":\"address\",\"internalType\":\"contractIERC20\"},{\"name\":\"feeCollector\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskSLA\",\"type\":\"uint96\",\"internalType\":\"uint96\"},{\"name\":\"stakeProportionThreshold\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"taskMetadata\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]},{\"name\":\"payload\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"result\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getTaskResult\",\"inputs\":[{\"name\":\"taskHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getTaskStatus\",\"inputs\":[{\"name\":\"taskHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint8\",\"internalType\":\"enumITaskMailboxTypes.TaskStatus\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"isAvsRegistered\",\"inputs\":[{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"isRegistered\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"isExecutorOperatorSetRegistered\",\"inputs\":[{\"name\":\"operatorSetKey\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"isRegistered\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"registerAvs\",\"inputs\":[{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"isRegistered\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setAvsConfig\",\"inputs\":[{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"config\",\"type\":\"tuple\",\"internalType\":\"structITaskMailboxTypes.AvsConfig\",\"components\":[{\"name\":\"aggregatorOperatorSetId\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"executorOperatorSetIds\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setExecutorOperatorSetTaskConfig\",\"inputs\":[{\"name\":\"operatorSet\",\"type\":\"tuple\",\"internalType\":\"structOperatorSet\",\"components\":[{\"name\":\"avs\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"id\",\"type\":\"uint32\",\"internalType\":\"uint32\"}]},{\"name\":\"config\",\"type\":\"tuple\",\"internalType\":\"structITaskMailboxTypes.ExecutorOperatorSetTaskConfig\",\"components\":[{\"name\":\"certificateVerifier\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskHook\",\"type\":\"address\",\"internalType\":\"contractIAVSTaskHook\"},{\"name\":\"feeToken\",\"type\":\"address\",\"internalType\":\"contractIERC20\"},{\"name\":\"feeCollector\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskSLA\",\"type\":\"uint96\",\"internalType\":\"uint96\"},{\"name\":\"stakeProportionThreshold\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"taskMetadata\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"submitResult\",\"inputs\":[{\"name\":\"taskHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"cert\",\"type\":\"tuple\",\"internalType\":\"structIBN254CertificateVerifier.BN254Certificate\",\"components\":[{\"name\":\"referenceTimestamp\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"messageHash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"sig\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"apk\",\"type\":\"tuple\",\"internalType\":\"structBN254.G2Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"},{\"name\":\"Y\",\"type\":\"uint256[2]\",\"internalType\":\"uint256[2]\"}]},{\"name\":\"nonsignerIndices\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"nonSignerWitnesses\",\"type\":\"tuple[]\",\"internalType\":\"structIBN254CertificateVerifier.BN254OperatorInfoWitness[]\",\"components\":[{\"name\":\"operatorIndex\",\"type\":\"uint32\",\"internalType\":\"uint32\"},{\"name\":\"operatorInfoProofs\",\"type\":\"bytes\",\"internalType\":\"bytes\"},{\"name\":\"operatorInfo\",\"type\":\"tuple\",\"internalType\":\"structIBN254CertificateVerifier.BN254OperatorInfo\",\"components\":[{\"name\":\"pubkey\",\"type\":\"tuple\",\"internalType\":\"structBN254.G1Point\",\"components\":[{\"name\":\"X\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"Y\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"name\":\"weights\",\"type\":\"uint96[]\",\"internalType\":\"uint96[]\"}]}]}]},{\"name\":\"result\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"AvsConfigSet\",\"inputs\":[{\"name\":\"caller\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"avs\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"aggregatorOperatorSetId\",\"type\":\"uint32\",\"indexed\":false,\"internalType\":\"uint32\"},{\"name\":\"executorOperatorSetIds\",\"type\":\"uint32[]\",\"indexed\":false,\"internalType\":\"uint32[]\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"AvsRegistered\",\"inputs\":[{\"name\":\"caller\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"avs\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"isRegistered\",\"type\":\"bool\",\"indexed\":false,\"internalType\":\"bool\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"ExecutorOperatorSetTaskConfigSet\",\"inputs\":[{\"name\":\"caller\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"avs\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"executorOperatorSetId\",\"type\":\"uint32\",\"indexed\":true,\"internalType\":\"uint32\"},{\"name\":\"config\",\"type\":\"tuple\",\"indexed\":false,\"internalType\":\"structITaskMailboxTypes.ExecutorOperatorSetTaskConfig\",\"components\":[{\"name\":\"certificateVerifier\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskHook\",\"type\":\"address\",\"internalType\":\"contractIAVSTaskHook\"},{\"name\":\"feeToken\",\"type\":\"address\",\"internalType\":\"contractIERC20\"},{\"name\":\"feeCollector\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"taskSLA\",\"type\":\"uint96\",\"internalType\":\"uint96\"},{\"name\":\"stakeProportionThreshold\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"taskMetadata\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"TaskCanceled\",\"inputs\":[{\"name\":\"creator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"taskHash\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"},{\"name\":\"avs\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"executorOperatorSetId\",\"type\":\"uint32\",\"indexed\":false,\"internalType\":\"uint32\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"TaskCreated\",\"inputs\":[{\"name\":\"creator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"taskHash\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"},{\"name\":\"avs\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"executorOperatorSetId\",\"type\":\"uint32\",\"indexed\":false,\"internalType\":\"uint32\"},{\"name\":\"refundCollector\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"address\"},{\"name\":\"avsFee\",\"type\":\"uint96\",\"indexed\":false,\"internalType\":\"uint96\"},{\"name\":\"taskDeadline\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"},{\"name\":\"payload\",\"type\":\"bytes\",\"indexed\":false,\"internalType\":\"bytes\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"TaskVerified\",\"inputs\":[{\"name\":\"aggregator\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"taskHash\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"},{\"name\":\"avs\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"executorOperatorSetId\",\"type\":\"uint32\",\"indexed\":false,\"internalType\":\"uint32\"},{\"name\":\"result\",\"type\":\"bytes\",\"indexed\":false,\"internalType\":\"bytes\"}],\"anonymous\":false},{\"type\":\"error\",\"name\":\"AvsNotRegistered\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"CertificateVerificationFailed\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"DuplicateExecutorOperatorSetId\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ExecutorOperatorSetNotRegistered\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"ExecutorOperatorSetTaskConfigNotSet\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidAddressZero\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidAggregatorOperatorSetId\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidTaskCreator\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InvalidTaskStatus\",\"inputs\":[{\"name\":\"expected\",\"type\":\"uint8\",\"internalType\":\"enumITaskMailboxTypes.TaskStatus\"},{\"name\":\"actual\",\"type\":\"uint8\",\"internalType\":\"enumITaskMailboxTypes.TaskStatus\"}]},{\"type\":\"error\",\"name\":\"PayloadIsEmpty\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"TaskSLAIsZero\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"TimestampAtCreation\",\"inputs\":[]}]",
	Bin: "0x6080604052348015600e575f5ffd5b5060015f55613aff806100205f395ff3fe608060405234801561000f575f5ffd5b50600436106100f0575f3560e01c806362fee03711610093578063e3d276ab11610063578063e3d276ab14610255578063ee8ca3b514610287578063ef1a14d71461029a578063fa2c0b37146102ad575f5ffd5b806362fee037146101e25780636bf6fad514610202578063867f126714610222578063a401ba4114610235575f5ffd5b80632bf6cc79116100ce5780632bf6cc791461017a5780633b4337191461019a5780634ad52e02146101af5780634e138f39146101cf575f5ffd5b80630443b7a0146100f457806314e51b6c1461011a5780631c7edb1714610154575b5f5ffd5b610107610102366004612b35565b6102cf565b6040519081526020015b60405180910390f35b61013f610128366004612bd5565b60046020525f908152604090205463ffffffff1681565b60405163ffffffff9091168152602001610111565b610167610162366004612bf0565b610a1c565b6040516101119796959493929190612c35565b61018d610188366004612bf0565b610b02565b6040516101119190612cca565b6101ad6101a8366004612fc0565b610e25565b005b6101c26101bd366004612bf0565b611396565b6040516101119190613149565b6101ad6101dd36600461327e565b61178f565b6101f56101f0366004612bf0565b611967565b6040516101119190613362565b610215610210366004613374565b611ccf565b604051610111919061338e565b6101ad6102303660046133a0565b611e27565b610248610243366004612bd5565b61211e565b6040516101119190613470565b610277610263366004612bd5565b60036020525f908152604090205460ff1681565b6040519015158152602001610111565b6101ad610295366004612bf0565b6121e4565b6101ad6102a83660046134a7565b612349565b6102776102bb366004612bf0565b60056020525f908152604090205460ff1681565b5f6102d8612357565b604080830151516001600160a01b03165f9081526003602052205460ff16610313576040516308c7f00160e31b815260040160405180910390fd5b60055f61032384604001516123ae565b815260208101919091526040015f205460ff166103535760405163c292b29760e01b815260040160405180910390fd5b5f8260600151511161037857604051636b1a1b6960e11b815260040160405180910390fd5b5f60065f61038985604001516123ae565b815260208082019290925260409081015f20815160e08101835281546001600160a01b0390811682526001830154811694820194909452600282015484169281019290925260038101549283166060830152600160a01b9092046001600160601b03166080820152600482015461ffff1660a082015260058201805491929160c084019190610417906134de565b80601f0160208091040260200160405190810160405280929190818152602001828054610443906134de565b801561048e5780601f106104655761010080835404028352916020019161048e565b820191905f5260205f20905b81548152906001019060200180831161047157829003601f168201915b5050509190925250508151919250506001600160a01b0316158015906104c0575060208101516001600160a01b031615155b80156104d857505f81608001516001600160601b0316115b6104f5576040516314b0a41d60e11b815260040160405180910390fd5b80602001516001600160a01b031663e507027a33856040015186606001516040518463ffffffff1660e01b815260040161053193929190613516565b5f6040518083038186803b158015610547575f5ffd5b505afa158015610559573d5f5f3e3d5ffd5b505050505f600154304686604051602001610577949392919061355d565b604051602081830303815290604052805190602001209050600154600161059e91906135ec565b6001908155604080860151516001600160a01b03165f9081526004602090815282822083518085018552815463ffffffff168152948101805485518185028101850190965280865293959491938584019383018282801561064757602002820191905f5260205f20905f905b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161060a5790505b5050505050815250509050604051806101800160405280336001600160a01b0316815260200161067642612417565b6001600160601b031681526020015f815260408088018051516001600160a01b03908116602080860191909152915182015163ffffffff908116848601528651166060808601919091528a51821660808601528a8301516001600160601b0390811660a08701525f60c0870181905260e087018b9052918c0151610100870152845180850186528281526101209096019590955287815260028352839020855192860151909416600160a01b02911617825582015160018083018054909160ff19919091169083600381111561074e5761074e612c96565b021790555060608281015160018301805460808087015160a08089015163ffffffff908116600160c81b0263ffffffff60c81b1991909316600160a81b0263ffffffff60a81b196001600160a01b0398891661010090810291909116610100600160c81b03199097169690961717169190911790935560c08088015160e08901516001600160601b03908116600160a01b9081029288169290921760028a01559389015160038901805461ffff92831661ffff19918216179091556101208b0151805160048c018054918b166001600160a01b0319928316178155602083015160058e018054918d16918416919091179055604083015160068e018054918d1691909316179091559981015195810151909616909202939096169290921760078801559282015160088701805491909516911617909255810151909190600984019061089a908261364a565b505050610140820151600a8201906108b2908261364a565b50610160820151600b8201906108c8908261364a565b50505060408301516001600160a01b0316158015906108f357505f85602001516001600160601b0316115b1561092957610929333087602001516001600160601b031686604001516001600160a01b0316612482909392919063ffffffff16565b6020830151604051638679c78160e01b8152600481018490526001600160a01b0390911690638679c781906024015f604051808303815f87803b15801561096e575f5ffd5b505af1158015610980573d5f5f3e3d5ffd5b5050505084604001515f01516001600160a01b031682336001600160a01b03167f4a09af06a0e08fd1c053a8b400de7833019c88066be8a2d3b3b17174a74fe317886040015160200151895f01518a6020015189608001516001600160601b0316426109ec91906135ec565b8c60600151604051610a02959493929190613704565b60405180910390a450915050610a1760015f55565b919050565b60066020525f90815260409020805460018201546002830154600384015460048501546005860180546001600160a01b0396871697958716969485169594841694600160a01b9094046001600160601b03169361ffff909316929190610a81906134de565b80601f0160208091040260200160405190810160405280929190818152602001828054610aad906134de565b8015610af85780601f10610acf57610100808354040283529160200191610af8565b820191905f5260205f20905b815481529060010190602001808311610adb57829003601f168201915b5050505050905087565b5f81815260026020908152604080832081516101808101835281546001600160a01b0381168252600160a01b90046001600160601b031693810193909352600181015484939283019060ff166003811115610b5f57610b5f612c96565b6003811115610b7057610b70612c96565b815260018201546001600160a01b036101008204811660208085019190915263ffffffff600160a81b84048116604080870191909152600160c81b9094041660608086019190915260028601548084166080808801919091526001600160601b03600160a01b92839004811660a0808a019190915260038a015461ffff90811660c0808c0191909152895160e08181018c5260048e0180548c16835260058f01548c169a83019a909a5260068e01548b169b82019b909b5260078d0154998a16978101979097529490970490911691840191909152600888015490941693820193909352600986018054949095019490939192840191610c6f906134de565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9b906134de565b8015610ce65780601f10610cbd57610100808354040283529160200191610ce6565b820191905f5260205f20905b815481529060010190602001808311610cc957829003601f168201915b5050505050815250508152602001600a82018054610d03906134de565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2f906134de565b8015610d7a5780601f10610d5157610100808354040283529160200191610d7a565b820191905f5260205f20905b815481529060010190602001808311610d5d57829003601f168201915b50505050508152602001600b82018054610d93906134de565b80601f0160208091040260200160405190810160405280929190818152602001828054610dbf906134de565b8015610e0a5780601f10610de157610100808354040283529160200191610e0a565b820191905f5260205f20905b815481529060010190602001808311610ded57829003601f168201915b5050505050815250509050610e1e816124e2565b9392505050565b610e2d612357565b5f83815260026020908152604080832081516101808101835281546001600160a01b0381168252600160a01b90046001600160601b031693810193909352600181015490939261114b929091859183019060ff166003811115610e9257610e92612c96565b6003811115610ea357610ea3612c96565b815260018201546001600160a01b036101008204811660208085019190915263ffffffff600160a81b84048116604080870191909152600160c81b9094041660608086019190915260028601548084166080808801919091526001600160601b03600160a01b92839004811660a0808a019190915260038a015461ffff90811660c0808c0191909152895160e08181018c5260048e0180548c16835260058f01548c169a83019a909a5260068e01548b169b82019b909b5260078d0154998a16978101979097529490970490911691840191909152600888015490941693820193909352600986018054949095019490939192840191610fa2906134de565b80601f0160208091040260200160405190810160405280929190818152602001828054610fce906134de565b80156110195780601f10610ff057610100808354040283529160200191611019565b820191905f5260205f20905b815481529060010190602001808311610ffc57829003601f168201915b5050505050815250508152602001600a82018054611036906134de565b80601f0160208091040260200160405190810160405280929190818152602001828054611062906134de565b80156110ad5780601f10611084576101008083540402835291602001916110ad565b820191905f5260205f20905b81548152906001019060200180831161109057829003601f168201915b50505050508152602001600b820180546110c6906134de565b80601f01602080910402602001604051908101604052809291908181526020018280546110f2906134de565b801561113d5780601f106111145761010080835404028352916020019161113d565b820191905f5260205f20905b81548152906001019060200180831161112057829003601f168201915b5050505050815250506124e2565b90505f81600381111561116057611160612c96565b145f82909161118d57604051634091b18960e11b8152600401611184929190613745565b60405180910390fd5b50508154600160a01b90046001600160601b031642116111c05760405163015a4b7560e51b815260040160405180910390fd5b6040805160018082528183019092525f91602080830190803683375050506008840154815191925061ffff169082905f906111fd576111fd613760565b61ffff9092166020928302919091019091015260048084015460405163644fdedf60e11b81525f926001600160a01b039092169163c89fbdbe91611245918a9187910161390d565b602060405180830381865afa158015611260573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611284919061395d565b9050806112a45760405163efcb98e760e01b815260040160405180910390fd5b60018401805460ff19166002179055600b84016112c1868261364a565b506005840154604051631e5e831360e01b81526001600160a01b0390911690631e5e8313906112f6908a908a90600401613978565b5f604051808303815f87803b15801561130d575f5ffd5b505af115801561131f573d5f5f3e3d5ffd5b50505050600184015460405161010082046001600160a01b031691899133917fd7eb53a86d7419ffc42bf17e0a61b4a2a8ab7f2e62c19368cee7d8822ea9f4539161137c91600160a81b900463ffffffff1690600b8b0190613990565b60405180910390a45050505061139160015f55565b505050565b61139e6127f9565b5f82815260026020908152604080832081516101808101835281546001600160a01b0381168252600160a01b90046001600160601b0316938101939093526001810154909183019060ff1660038111156113fa576113fa612c96565b600381111561140b5761140b612c96565b815260018201546001600160a01b036101008204811660208085019190915263ffffffff600160a81b84048116604080870191909152600160c81b9094041660608086019190915260028601548084166080808801919091526001600160601b03600160a01b92839004811660a0808a019190915260038a015461ffff90811660c0808c0191909152895160e08181018c5260048e0180548c16835260058f01548c169a83019a909a5260068e01548b169b82019b909b5260078d0154998a1697810197909752949097049091169184019190915260088801549094169382019390935260098601805494909501949093919284019161150a906134de565b80601f0160208091040260200160405190810160405280929190818152602001828054611536906134de565b80156115815780601f1061155857610100808354040283529160200191611581565b820191905f5260205f20905b81548152906001019060200180831161156457829003601f168201915b5050505050815250508152602001600a8201805461159e906134de565b80601f01602080910402602001604051908101604052809291908181526020018280546115ca906134de565b80156116155780601f106115ec57610100808354040283529160200191611615565b820191905f5260205f20905b8154815290600101906020018083116115f857829003601f168201915b50505050508152602001600b8201805461162e906134de565b80601f016020809104026020016040519081016040528092919081815260200182805461165a906134de565b80156116a55780601f1061167c576101008083540402835291602001916116a5565b820191905f5260205f20905b81548152906001019060200180831161168857829003601f168201915b5050505050815250509050604051806101800160405280825f01516001600160a01b0316815260200182602001516001600160601b031681526020016116ea836124e2565b60038111156116fb576116fb612c96565b815260200182606001516001600160a01b03168152602001826080015163ffffffff1681526020018260a0015163ffffffff1681526020018260c001516001600160a01b031681526020018260e001516001600160601b0316815260200182610100015161ffff16815260200182610120015181526020018261014001518152602001826101600151815250915050919050565b60055f61179b846123ae565b815260208101919091526040015f205460ff166117cb5760405163c292b29760e01b815260040160405180910390fd5b80516001600160a01b03166117f357604051630863a45360e11b815260040160405180910390fd5b60208101516001600160a01b031661181e57604051630863a45360e11b815260040160405180910390fd5b5f81608001516001600160601b03161161184b5760405163568added60e11b815260040160405180910390fd5b8060065f611858856123ae565b815260208082019290925260409081015f20835181546001600160a01b039182166001600160a01b031991821617835593850151600183018054918316918616919091179055918401516002820180549184169190941617909255606083015160808401516001600160601b0316600160a01b02911617600382015560a082015160048201805461ffff90921661ffff1990921691909117905560c08201516005820190611906908261364a565b50905050816020015163ffffffff16825f01516001600160a01b0316336001600160a01b03167fb4758fe2b1355bebcbc78c10619457fcaa54e85fb3b994318238b92a097f54258460405161195b919061338e565b60405180910390a45050565b5f81815260026020908152604080832081516101808101835281546001600160a01b0381168252600160a01b90046001600160601b0316938101939093526001810154606094939283019060ff1660038111156119c6576119c6612c96565b60038111156119d7576119d7612c96565b815260018201546001600160a01b036101008204811660208085019190915263ffffffff600160a81b84048116604080870191909152600160c81b9094041660608086019190915260028601548084166080808801919091526001600160601b03600160a01b92839004811660a0808a019190915260038a015461ffff90811660c0808c0191909152895160e08181018c5260048e0180548c16835260058f01548c169a83019a909a5260068e01548b169b82019b909b5260078d0154998a16978101979097529490970490911691840191909152600888015490941693820193909352600986018054949095019490939192840191611ad6906134de565b80601f0160208091040260200160405190810160405280929190818152602001828054611b02906134de565b8015611b4d5780601f10611b2457610100808354040283529160200191611b4d565b820191905f5260205f20905b815481529060010190602001808311611b3057829003601f168201915b5050505050815250508152602001600a82018054611b6a906134de565b80601f0160208091040260200160405190810160405280929190818152602001828054611b96906134de565b8015611be15780601f10611bb857610100808354040283529160200191611be1565b820191905f5260205f20905b815481529060010190602001808311611bc457829003601f168201915b50505050508152602001600b82018054611bfa906134de565b80601f0160208091040260200160405190810160405280929190818152602001828054611c26906134de565b8015611c715780601f10611c4857610100808354040283529160200191611c71565b820191905f5260205f20905b815481529060010190602001808311611c5457829003601f168201915b50505050508152505090505f611c86826124e2565b90506002816003811115611c9c57611c9c612c96565b146002829091611cc157604051634091b18960e11b8152600401611184929190613745565b505050610160015192915050565b6040805160e0810182525f8082526020820181905291810182905260608082018390526080820183905260a0820183905260c082015290600690611d12846123ae565b815260208082019290925260409081015f20815160e08101835281546001600160a01b0390811682526001830154811694820194909452600282015484169281019290925260038101549283166060830152600160a01b9092046001600160601b03166080820152600482015461ffff1660a082015260058201805491929160c084019190611da0906134de565b80601f0160208091040260200160405190810160405280929190818152602001828054611dcc906134de565b8015611e175780601f10611dee57610100808354040283529160200191611e17565b820191905f5260205f20905b815481529060010190602001808311611dfa57829003601f168201915b5050505050815250509050919050565b6001600160a01b0382165f90815260046020908152604080832081518083018352815463ffffffff1681526001820180548451818702810187019095528085529194929385840193909290830182828015611eca57602002820191905f5260205f20905f905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411611e8d5790505b50505050508152505090505f5f90505b816020015151811015611f5f575f6040518060400160405280866001600160a01b0316815260200184602001518481518110611f1857611f18613760565b602002602001015163ffffffff1681525090505f60055f611f38846123ae565b815260208101919091526040015f20805460ff191691151591909117905550600101611eda565b505f5b826020015151811015612058575f6040518060400160405280866001600160a01b0316815260200185602001518481518110611fa057611fa0613760565b602002602001015163ffffffff168152509050806020015163ffffffff16845f015163ffffffff1603611fe6576040516311eef66d60e01b815260040160405180910390fd5b60055f611ff2836123ae565b815260208101919091526040015f205460ff161561202357604051631efe361b60e21b815260040160405180910390fd5b600160055f612031846123ae565b815260208101919091526040015f20805460ff191691151591909117905550600101611f62565b506001600160a01b0383165f9081526003602052604090205460ff166120835761208383600161253c565b6001600160a01b0383165f9081526004602090815260409091208351815463ffffffff191663ffffffff90911617815583820151805185936120cc926001850192910190612896565b5050825160208401516040516001600160a01b038716935033927fc5e4272bacf3a88a902bbb2920ed1308c295273ff00838766ed22d5e050087ca9261211192613a24565b60405180910390a3505050565b604080518082019091525f8152606060208201526001600160a01b0382165f9081526004602090815260409182902082518084018452815463ffffffff16815260018201805485518186028101860190965280865291949293858101939290830182828015611e1757602002820191905f5260205f20905f905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116121985790505050505050815250509050919050565b5f81815260026020908152604080832081516101808101835281546001600160a01b0381168252600160a01b90046001600160601b0316938101939093526001810154909392612249929091859183019060ff166003811115610e9257610e92612c96565b90505f81600381111561225e5761225e612c96565b145f82909161228257604051634091b18960e11b8152600401611184929190613745565b505081546001600160a01b031633146122ae5760405163d6f63bd360e01b815260040160405180910390fd5b8154600160a01b90046001600160601b031642116122df5760405163015a4b7560e51b815260040160405180910390fd5b6001828101805460ff19169091179081905560408051600160a81b830463ffffffff16815290516101009092046001600160a01b031691859133917f3e701c33cc740e1f61ccdcafcf97e5e65a0d7f4617aed0e8ae51be092ac18a599181900360200190a4505050565b612353828261253c565b5050565b60025f54036123a85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401611184565b60025f55565b5f815f0151826020015163ffffffff166040516020016123f992919060609290921b6bffffffffffffffffffffffff1916825260a01b6001600160a01b031916601482015260200190565b60405160208183030381529060405261241190613a71565b92915050565b5f6001600160601b0382111561247e5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b6064820152608401611184565b5090565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526124dc90859061259c565b50505050565b5f80826040015160038111156124fa576124fa612c96565b148015612527575081610120015160800151826020015161251b9190613a94565b6001600160601b031642115b1561253457506003919050565b506040015190565b6001600160a01b0382165f81815260036020908152604091829020805460ff1916851515908117909155915191825233917f8157f276d267ffc7b002873c20b83d9bd091016e124bf541534269a907029562910160405180910390a35050565b5f6125f0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661266f9092919063ffffffff16565b905080515f1480612610575080806020019051810190612610919061395d565b6113915760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401611184565b606061267d84845f85612685565b949350505050565b6060824710156126e65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401611184565b5f5f866001600160a01b031685876040516127019190613ab3565b5f6040518083038185875af1925050503d805f811461273b576040519150601f19603f3d011682016040523d82523d5f602084013e612740565b606091505b50915091506127518783838761275c565b979650505050505050565b606083156127ca5782515f036127c3576001600160a01b0385163b6127c35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611184565b508161267d565b61267d83838151156127df5781518083602001fd5b8060405162461bcd60e51b81526004016111849190613362565b60408051610180810182525f80825260208201819052909182019081525f6020820181905260408201819052606082018190526080820181905260a0820181905260c082015260e0016128826040805160e0810182525f8082526020820181905291810182905260608082018390526080820183905260a082019290925260c081019190915290565b815260200160608152602001606081525090565b828054828255905f5260205f2090600701600890048101928215612932579160200282015f5b8382111561290057835183826101000a81548163ffffffff021916908363ffffffff16021790555092602001926004016020816003010492830192600103026128bc565b80156129305782816101000a81549063ffffffff0219169055600401602081600301049283019260010302612900565b505b5061247e9291505b8082111561247e575f815560010161293a565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b03811182821017156129835761298361294d565b60405290565b604051608081016001600160401b03811182821017156129835761298361294d565b604051606081016001600160401b03811182821017156129835761298361294d565b60405160c081016001600160401b03811182821017156129835761298361294d565b60405160e081016001600160401b03811182821017156129835761298361294d565b604051601f8201601f191681016001600160401b0381118282101715612a3957612a3961294d565b604052919050565b6001600160a01b0381168114612a55575f5ffd5b50565b8035610a1781612a41565b80356001600160601b0381168114610a17575f5ffd5b803563ffffffff81168114610a17575f5ffd5b5f60408284031215612a9c575f5ffd5b612aa4612961565b90508135612ab181612a41565b8152612abf60208301612a79565b602082015292915050565b5f82601f830112612ad9575f5ffd5b81356001600160401b03811115612af257612af261294d565b612b05601f8201601f1916602001612a11565b818152846020838601011115612b19575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f60208284031215612b45575f5ffd5b81356001600160401b03811115612b5a575f5ffd5b820160a08185031215612b6b575f5ffd5b612b73612989565b8135612b7e81612a41565b8152612b8c60208301612a63565b6020820152612b9e8560408401612a8c565b604082015260808201356001600160401b03811115612bbb575f5ffd5b612bc786828501612aca565b606083015250949350505050565b5f60208284031215612be5575f5ffd5b8135610e1e81612a41565b5f60208284031215612c00575f5ffd5b5035919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b6001600160a01b03888116825287811660208301528681166040830152851660608201526001600160601b038416608082015261ffff831660a082015260e060c082018190525f90612c8990830184612c07565b9998505050505050505050565b634e487b7160e01b5f52602160045260245ffd5b60048110612cc657634e487b7160e01b5f52602160045260245ffd5b9052565b602081016124118284612caa565b5f60408284031215612ce8575f5ffd5b612cf0612961565b823581526020928301359281019290925250919050565b5f82601f830112612d16575f5ffd5b612d1e612961565b806040840185811115612d2f575f5ffd5b845b81811015612d49578035845260209384019301612d31565b509095945050505050565b5f60808284031215612d64575f5ffd5b612d6c612961565b9050612d788383612d07565b8152612abf8360408401612d07565b5f6001600160401b03821115612d9f57612d9f61294d565b5060051b60200190565b5f82601f830112612db8575f5ffd5b8135612dcb612dc682612d87565b612a11565b8082825260208201915060208360051b860101925085831115612dec575f5ffd5b602085015b83811015612e1057612e0281612a79565b835260209283019201612df1565b5095945050505050565b5f82601f830112612e29575f5ffd5b8135612e37612dc682612d87565b8082825260208201915060208360051b860101925085831115612e58575f5ffd5b602085015b83811015612e105780356001600160401b03811115612e7a575f5ffd5b86016060818903601f19011215612e8f575f5ffd5b612e976129ab565b612ea360208301612a79565b815260408201356001600160401b03811115612ebd575f5ffd5b612ecc8a602083860101612aca565b60208301525060608201356001600160401b03811115612eea575f5ffd5b6020818401019250506060828a031215612f02575f5ffd5b612f0a612961565b612f148a84612cd8565b815260408301356001600160401b03811115612f2e575f5ffd5b80840193505089601f840112612f42575f5ffd5b8235612f50612dc682612d87565b8082825260208201915060208360051b87010192508c831115612f71575f5ffd5b6020860195505b82861015612f9a57612f8986612a63565b825260209586019590910190612f78565b806020850152505050806040830152508085525050602083019250602081019050612e5d565b5f5f5f60608486031215612fd2575f5ffd5b8335925060208401356001600160401b03811115612fee575f5ffd5b84016101408187031215613000575f5ffd5b6130086129cd565b61301182612a79565b81526020828101359082015261302a8760408401612cd8565b604082015261303c8760808401612d54565b60608201526101008201356001600160401b0381111561305a575f5ffd5b61306688828501612da9565b6080830152506101208201356001600160401b03811115613085575f5ffd5b61309188828501612e1a565b60a08301525092505060408401356001600160401b038111156130b2575f5ffd5b6130be86828701612aca565b9150509250925092565b80516001600160a01b039081168352602080830151821690840152604080830151821690840152606080830151918216908401525f9050608082015161311960808501826001600160601b03169052565b5060a082015161312f60a085018261ffff169052565b5060c082015160e060c085015261267d60e0850182612c07565b602081526131636020820183516001600160a01b03169052565b5f602083015161317e60408401826001600160601b03169052565b5060408301516131916060840182612caa565b5060608301516001600160a01b038116608084015250608083015163ffffffff811660a08401525060a083015163ffffffff811660c08401525060c08301516001600160a01b03811660e08401525060e08301516001600160601b0381166101008401525061010083015161ffff8116610120840152506101208301516101806101408401526132256101a08401826130c8565b9050610140840151601f19848303016101608501526132448282612c07565b915050610160840151601f19848303016101808501526132648282612c07565b95945050505050565b803561ffff81168114610a17575f5ffd5b5f5f6060838503121561328f575f5ffd5b6132998484612a8c565b915060408301356001600160401b038111156132b3575f5ffd5b830160e081860312156132c4575f5ffd5b6132cc6129ef565b6132d582612a58565b81526132e360208301612a58565b60208201526132f460408301612a58565b604082015261330560608301612a58565b606082015261331660808301612a63565b608082015261332760a0830161326d565b60a082015260c08201356001600160401b03811115613344575f5ffd5b61335087828501612aca565b60c08301525080925050509250929050565b602081525f610e1e6020830184612c07565b5f60408284031215613384575f5ffd5b610e1e8383612a8c565b602081525f610e1e60208301846130c8565b5f5f604083850312156133b1575f5ffd5b82356133bc81612a41565b915060208301356001600160401b038111156133d6575f5ffd5b8301604081860312156133e7575f5ffd5b6133ef612961565b6133f882612a79565b815260208201356001600160401b03811115613412575f5ffd5b61341e87828501612da9565b60208301525080925050509250929050565b5f8151808452602084019350602083015f5b8281101561346657815163ffffffff16865260209586019590910190600101613442565b5093949350505050565b6020815263ffffffff82511660208201525f602083015160408084015261267d6060840182613430565b8015158114612a55575f5ffd5b5f5f604083850312156134b8575f5ffd5b82356134c381612a41565b915060208301356134d38161349a565b809150509250929050565b600181811c908216806134f257607f821691505b60208210810361351057634e487b7160e01b5f52602260045260245ffd5b50919050565b6001600160a01b0384168152613548602082018480516001600160a01b0316825260209081015163ffffffff16910152565b608060608201525f6132646080830184612c07565b8481526001600160a01b0384811660208084019190915260408084018690526080606085018190528551841690850152848201516001600160601b031660a0850152840151805190921660c084015281015163ffffffff1660e08301525f9050606083015160a0610100840152612751610120840182612c07565b634e487b7160e01b5f52601160045260245ffd5b80820180821115612411576124116135d8565b601f82111561139157805f5260205f20601f840160051c810160208510156136245750805b601f840160051c820191505b81811015613643575f8155600101613630565b5050505050565b81516001600160401b038111156136635761366361294d565b6136778161367184546134de565b846135ff565b6020601f8211600181146136a9575f83156136925750848201515b5f19600385901b1c1916600184901b178455613643565b5f84815260208120601f198516915b828110156136d857878501518255602094850194600190920191016136b8565b50848210156136f557868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b63ffffffff8616815260018060a01b03851660208201526001600160601b038416604082015282606082015260a060808201525f61275160a0830184612c07565b604081016137538285612caa565b610e1e6020830184612caa565b634e487b7160e01b5f52603260045260245ffd5b805f5b60028110156124dc578151845260209384019390910190600101613777565b5f82825180855260208501945060208160051b830101602085015f5b8381101561387457601f19858403018852815163ffffffff81511684526020810151606060208601526137e86060860182612c07565b90506040820151915084810360408601526060810161381282845180518252602090810151910152565b6020928301516060604084015280518083529301925f92608001905b8084101561385a576001600160601b03855116825260208201915060208501945060018401935061382e565b5060209b8c019b90965094909401935050506001016137b2565b50909695505050505050565b63ffffffff8151168252602081015160208301525f60408201516138b1604085018280518252602090810151910152565b5060608201516138c5608085018251613774565b602001516138d660c0850182613774565b5060808201516101406101008501526138f3610140850182613430565b905060a08301518482036101208601526132648282613796565b604081525f61391f6040830185613880565b82810360208401528084518083526020830191506020860192505f5b8181101561387457835161ffff1683526020938401939092019160010161393b565b5f6020828403121561396d575f5ffd5b8151610e1e8161349a565b828152604060208201525f61267d6040830184613880565b63ffffffff83168152604060208201525f5f83546139ad816134de565b806040860152600182165f81146139cb57600181146139e757613a18565b60ff1983166060870152606082151560051b8701019350613a18565b865f5260205f205f5b83811015613a0f578154888201606001526001909101906020016139f0565b87016060019450505b50919695505050505050565b5f6040820163ffffffff85168352604060208401528084518083526060850191506020860192505f5b8181101561387457835163ffffffff16835260209384019390920191600101613a4d565b80516020808301519190811015613510575f1960209190910360031b1b16919050565b6001600160601b038181168382160190811115612411576124116135d8565b5f82518060208501845e5f92019182525091905056fea2646970667358221220357d508f2c045052766a12b4aa4da4822afd0ddfecc8411706d706d1c19a023964736f6c634300081b0033",
}

// TaskMailboxABI is the input ABI used to generate the binding from.
// Deprecated: Use TaskMailboxMetaData.ABI instead.
var TaskMailboxABI = TaskMailboxMetaData.ABI

// TaskMailboxBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use TaskMailboxMetaData.Bin instead.
var TaskMailboxBin = TaskMailboxMetaData.Bin

// DeployTaskMailbox deploys a new Ethereum contract, binding an instance of TaskMailbox to it.
func DeployTaskMailbox(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *TaskMailbox, error) {
	parsed, err := TaskMailboxMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(TaskMailboxBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &TaskMailbox{TaskMailboxCaller: TaskMailboxCaller{contract: contract}, TaskMailboxTransactor: TaskMailboxTransactor{contract: contract}, TaskMailboxFilterer: TaskMailboxFilterer{contract: contract}}, nil
}

// TaskMailbox is an auto generated Go binding around an Ethereum contract.
type TaskMailbox struct {
	TaskMailboxCaller     // Read-only binding to the contract
	TaskMailboxTransactor // Write-only binding to the contract
	TaskMailboxFilterer   // Log filterer for contract events
}

// TaskMailboxCaller is an auto generated read-only Go binding around an Ethereum contract.
type TaskMailboxCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TaskMailboxTransactor is an auto generated write-only Go binding around an Ethereum contract.
type TaskMailboxTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TaskMailboxFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type TaskMailboxFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TaskMailboxSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type TaskMailboxSession struct {
	Contract     *TaskMailbox      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TaskMailboxCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type TaskMailboxCallerSession struct {
	Contract *TaskMailboxCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// TaskMailboxTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type TaskMailboxTransactorSession struct {
	Contract     *TaskMailboxTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// TaskMailboxRaw is an auto generated low-level Go binding around an Ethereum contract.
type TaskMailboxRaw struct {
	Contract *TaskMailbox // Generic contract binding to access the raw methods on
}

// TaskMailboxCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type TaskMailboxCallerRaw struct {
	Contract *TaskMailboxCaller // Generic read-only contract binding to access the raw methods on
}

// TaskMailboxTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type TaskMailboxTransactorRaw struct {
	Contract *TaskMailboxTransactor // Generic write-only contract binding to access the raw methods on
}

// NewTaskMailbox creates a new instance of TaskMailbox, bound to a specific deployed contract.
func NewTaskMailbox(address common.Address, backend bind.ContractBackend) (*TaskMailbox, error) {
	contract, err := bindTaskMailbox(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &TaskMailbox{TaskMailboxCaller: TaskMailboxCaller{contract: contract}, TaskMailboxTransactor: TaskMailboxTransactor{contract: contract}, TaskMailboxFilterer: TaskMailboxFilterer{contract: contract}}, nil
}

// NewTaskMailboxCaller creates a new read-only instance of TaskMailbox, bound to a specific deployed contract.
func NewTaskMailboxCaller(address common.Address, caller bind.ContractCaller) (*TaskMailboxCaller, error) {
	contract, err := bindTaskMailbox(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TaskMailboxCaller{contract: contract}, nil
}

// NewTaskMailboxTransactor creates a new write-only instance of TaskMailbox, bound to a specific deployed contract.
func NewTaskMailboxTransactor(address common.Address, transactor bind.ContractTransactor) (*TaskMailboxTransactor, error) {
	contract, err := bindTaskMailbox(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TaskMailboxTransactor{contract: contract}, nil
}

// NewTaskMailboxFilterer creates a new log filterer instance of TaskMailbox, bound to a specific deployed contract.
func NewTaskMailboxFilterer(address common.Address, filterer bind.ContractFilterer) (*TaskMailboxFilterer, error) {
	contract, err := bindTaskMailbox(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TaskMailboxFilterer{contract: contract}, nil
}

// bindTaskMailbox binds a generic wrapper to an already deployed contract.
func bindTaskMailbox(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := TaskMailboxMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TaskMailbox *TaskMailboxRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TaskMailbox.Contract.TaskMailboxCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TaskMailbox *TaskMailboxRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TaskMailbox.Contract.TaskMailboxTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TaskMailbox *TaskMailboxRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TaskMailbox.Contract.TaskMailboxTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TaskMailbox *TaskMailboxCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TaskMailbox.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TaskMailbox *TaskMailboxTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TaskMailbox.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TaskMailbox *TaskMailboxTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TaskMailbox.Contract.contract.Transact(opts, method, params...)
}

// AvsConfigs is a free data retrieval call binding the contract method 0x14e51b6c.
//
// Solidity: function avsConfigs(address avs) view returns(uint32 aggregatorOperatorSetId)
func (_TaskMailbox *TaskMailboxCaller) AvsConfigs(opts *bind.CallOpts, avs common.Address) (uint32, error) {
	var out []interface{}
	err := _TaskMailbox.contract.Call(opts, &out, "avsConfigs", avs)

	if err != nil {
		return *new(uint32), err
	}

	out0 := *abi.ConvertType(out[0], new(uint32)).(*uint32)

	return out0, err

}

// AvsConfigs is a free data retrieval call binding the contract method 0x14e51b6c.
//
// Solidity: function avsConfigs(address avs) view returns(uint32 aggregatorOperatorSetId)
func (_TaskMailbox *TaskMailboxSession) AvsConfigs(avs common.Address) (uint32, error) {
	return _TaskMailbox.Contract.AvsConfigs(&_TaskMailbox.CallOpts, avs)
}

// AvsConfigs is a free data retrieval call binding the contract method 0x14e51b6c.
//
// Solidity: function avsConfigs(address avs) view returns(uint32 aggregatorOperatorSetId)
func (_TaskMailbox *TaskMailboxCallerSession) AvsConfigs(avs common.Address) (uint32, error) {
	return _TaskMailbox.Contract.AvsConfigs(&_TaskMailbox.CallOpts, avs)
}

// ExecutorOperatorSetTaskConfigs is a free data retrieval call binding the contract method 0x1c7edb17.
//
// Solidity: function executorOperatorSetTaskConfigs(bytes32 operatorSetKey) view returns(address certificateVerifier, address taskHook, address feeToken, address feeCollector, uint96 taskSLA, uint16 stakeProportionThreshold, bytes taskMetadata)
func (_TaskMailbox *TaskMailboxCaller) ExecutorOperatorSetTaskConfigs(opts *bind.CallOpts, operatorSetKey [32]byte) (struct {
	CertificateVerifier      common.Address
	TaskHook                 common.Address
	FeeToken                 common.Address
	FeeCollector             common.Address
	TaskSLA                  *big.Int
	StakeProportionThreshold uint16
	TaskMetadata             []byte
}, error) {
	var out []interface{}
	err := _TaskMailbox.contract.Call(opts, &out, "executorOperatorSetTaskConfigs", operatorSetKey)

	outstruct := new(struct {
		CertificateVerifier      common.Address
		TaskHook                 common.Address
		FeeToken                 common.Address
		FeeCollector             common.Address
		TaskSLA                  *big.Int
		StakeProportionThreshold uint16
		TaskMetadata             []byte
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.CertificateVerifier = *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	outstruct.TaskHook = *abi.ConvertType(out[1], new(common.Address)).(*common.Address)
	outstruct.FeeToken = *abi.ConvertType(out[2], new(common.Address)).(*common.Address)
	outstruct.FeeCollector = *abi.ConvertType(out[3], new(common.Address)).(*common.Address)
	outstruct.TaskSLA = *abi.ConvertType(out[4], new(*big.Int)).(**big.Int)
	outstruct.StakeProportionThreshold = *abi.ConvertType(out[5], new(uint16)).(*uint16)
	outstruct.TaskMetadata = *abi.ConvertType(out[6], new([]byte)).(*[]byte)

	return *outstruct, err

}

// ExecutorOperatorSetTaskConfigs is a free data retrieval call binding the contract method 0x1c7edb17.
//
// Solidity: function executorOperatorSetTaskConfigs(bytes32 operatorSetKey) view returns(address certificateVerifier, address taskHook, address feeToken, address feeCollector, uint96 taskSLA, uint16 stakeProportionThreshold, bytes taskMetadata)
func (_TaskMailbox *TaskMailboxSession) ExecutorOperatorSetTaskConfigs(operatorSetKey [32]byte) (struct {
	CertificateVerifier      common.Address
	TaskHook                 common.Address
	FeeToken                 common.Address
	FeeCollector             common.Address
	TaskSLA                  *big.Int
	StakeProportionThreshold uint16
	TaskMetadata             []byte
}, error) {
	return _TaskMailbox.Contract.ExecutorOperatorSetTaskConfigs(&_TaskMailbox.CallOpts, operatorSetKey)
}

// ExecutorOperatorSetTaskConfigs is a free data retrieval call binding the contract method 0x1c7edb17.
//
// Solidity: function executorOperatorSetTaskConfigs(bytes32 operatorSetKey) view returns(address certificateVerifier, address taskHook, address feeToken, address feeCollector, uint96 taskSLA, uint16 stakeProportionThreshold, bytes taskMetadata)
func (_TaskMailbox *TaskMailboxCallerSession) ExecutorOperatorSetTaskConfigs(operatorSetKey [32]byte) (struct {
	CertificateVerifier      common.Address
	TaskHook                 common.Address
	FeeToken                 common.Address
	FeeCollector             common.Address
	TaskSLA                  *big.Int
	StakeProportionThreshold uint16
	TaskMetadata             []byte
}, error) {
	return _TaskMailbox.Contract.ExecutorOperatorSetTaskConfigs(&_TaskMailbox.CallOpts, operatorSetKey)
}

// GetAvsConfig is a free data retrieval call binding the contract method 0xa401ba41.
//
// Solidity: function getAvsConfig(address avs) view returns((uint32,uint32[]))
func (_TaskMailbox *TaskMailboxCaller) GetAvsConfig(opts *bind.CallOpts, avs common.Address) (ITaskMailboxTypesAvsConfig, error) {
	var out []interface{}
	err := _TaskMailbox.contract.Call(opts, &out, "getAvsConfig", avs)

	if err != nil {
		return *new(ITaskMailboxTypesAvsConfig), err
	}

	out0 := *abi.ConvertType(out[0], new(ITaskMailboxTypesAvsConfig)).(*ITaskMailboxTypesAvsConfig)

	return out0, err

}

// GetAvsConfig is a free data retrieval call binding the contract method 0xa401ba41.
//
// Solidity: function getAvsConfig(address avs) view returns((uint32,uint32[]))
func (_TaskMailbox *TaskMailboxSession) GetAvsConfig(avs common.Address) (ITaskMailboxTypesAvsConfig, error) {
	return _TaskMailbox.Contract.GetAvsConfig(&_TaskMailbox.CallOpts, avs)
}

// GetAvsConfig is a free data retrieval call binding the contract method 0xa401ba41.
//
// Solidity: function getAvsConfig(address avs) view returns((uint32,uint32[]))
func (_TaskMailbox *TaskMailboxCallerSession) GetAvsConfig(avs common.Address) (ITaskMailboxTypesAvsConfig, error) {
	return _TaskMailbox.Contract.GetAvsConfig(&_TaskMailbox.CallOpts, avs)
}

// GetExecutorOperatorSetTaskConfig is a free data retrieval call binding the contract method 0x6bf6fad5.
//
// Solidity: function getExecutorOperatorSetTaskConfig((address,uint32) operatorSet) view returns((address,address,address,address,uint96,uint16,bytes))
func (_TaskMailbox *TaskMailboxCaller) GetExecutorOperatorSetTaskConfig(opts *bind.CallOpts, operatorSet OperatorSet) (ITaskMailboxTypesExecutorOperatorSetTaskConfig, error) {
	var out []interface{}
	err := _TaskMailbox.contract.Call(opts, &out, "getExecutorOperatorSetTaskConfig", operatorSet)

	if err != nil {
		return *new(ITaskMailboxTypesExecutorOperatorSetTaskConfig), err
	}

	out0 := *abi.ConvertType(out[0], new(ITaskMailboxTypesExecutorOperatorSetTaskConfig)).(*ITaskMailboxTypesExecutorOperatorSetTaskConfig)

	return out0, err

}

// GetExecutorOperatorSetTaskConfig is a free data retrieval call binding the contract method 0x6bf6fad5.
//
// Solidity: function getExecutorOperatorSetTaskConfig((address,uint32) operatorSet) view returns((address,address,address,address,uint96,uint16,bytes))
func (_TaskMailbox *TaskMailboxSession) GetExecutorOperatorSetTaskConfig(operatorSet OperatorSet) (ITaskMailboxTypesExecutorOperatorSetTaskConfig, error) {
	return _TaskMailbox.Contract.GetExecutorOperatorSetTaskConfig(&_TaskMailbox.CallOpts, operatorSet)
}

// GetExecutorOperatorSetTaskConfig is a free data retrieval call binding the contract method 0x6bf6fad5.
//
// Solidity: function getExecutorOperatorSetTaskConfig((address,uint32) operatorSet) view returns((address,address,address,address,uint96,uint16,bytes))
func (_TaskMailbox *TaskMailboxCallerSession) GetExecutorOperatorSetTaskConfig(operatorSet OperatorSet) (ITaskMailboxTypesExecutorOperatorSetTaskConfig, error) {
	return _TaskMailbox.Contract.GetExecutorOperatorSetTaskConfig(&_TaskMailbox.CallOpts, operatorSet)
}

// GetTaskInfo is a free data retrieval call binding the contract method 0x4ad52e02.
//
// Solidity: function getTaskInfo(bytes32 taskHash) view returns((address,uint96,uint8,address,uint32,uint32,address,uint96,uint16,(address,address,address,address,uint96,uint16,bytes),bytes,bytes))
func (_TaskMailbox *TaskMailboxCaller) GetTaskInfo(opts *bind.CallOpts, taskHash [32]byte) (ITaskMailboxTypesTask, error) {
	var out []interface{}
	err := _TaskMailbox.contract.Call(opts, &out, "getTaskInfo", taskHash)

	if err != nil {
		return *new(ITaskMailboxTypesTask), err
	}

	out0 := *abi.ConvertType(out[0], new(ITaskMailboxTypesTask)).(*ITaskMailboxTypesTask)

	return out0, err

}

// GetTaskInfo is a free data retrieval call binding the contract method 0x4ad52e02.
//
// Solidity: function getTaskInfo(bytes32 taskHash) view returns((address,uint96,uint8,address,uint32,uint32,address,uint96,uint16,(address,address,address,address,uint96,uint16,bytes),bytes,bytes))
func (_TaskMailbox *TaskMailboxSession) GetTaskInfo(taskHash [32]byte) (ITaskMailboxTypesTask, error) {
	return _TaskMailbox.Contract.GetTaskInfo(&_TaskMailbox.CallOpts, taskHash)
}

// GetTaskInfo is a free data retrieval call binding the contract method 0x4ad52e02.
//
// Solidity: function getTaskInfo(bytes32 taskHash) view returns((address,uint96,uint8,address,uint32,uint32,address,uint96,uint16,(address,address,address,address,uint96,uint16,bytes),bytes,bytes))
func (_TaskMailbox *TaskMailboxCallerSession) GetTaskInfo(taskHash [32]byte) (ITaskMailboxTypesTask, error) {
	return _TaskMailbox.Contract.GetTaskInfo(&_TaskMailbox.CallOpts, taskHash)
}

// GetTaskResult is a free data retrieval call binding the contract method 0x62fee037.
//
// Solidity: function getTaskResult(bytes32 taskHash) view returns(bytes)
func (_TaskMailbox *TaskMailboxCaller) GetTaskResult(opts *bind.CallOpts, taskHash [32]byte) ([]byte, error) {
	var out []interface{}
	err := _TaskMailbox.contract.Call(opts, &out, "getTaskResult", taskHash)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// GetTaskResult is a free data retrieval call binding the contract method 0x62fee037.
//
// Solidity: function getTaskResult(bytes32 taskHash) view returns(bytes)
func (_TaskMailbox *TaskMailboxSession) GetTaskResult(taskHash [32]byte) ([]byte, error) {
	return _TaskMailbox.Contract.GetTaskResult(&_TaskMailbox.CallOpts, taskHash)
}

// GetTaskResult is a free data retrieval call binding the contract method 0x62fee037.
//
// Solidity: function getTaskResult(bytes32 taskHash) view returns(bytes)
func (_TaskMailbox *TaskMailboxCallerSession) GetTaskResult(taskHash [32]byte) ([]byte, error) {
	return _TaskMailbox.Contract.GetTaskResult(&_TaskMailbox.CallOpts, taskHash)
}

// GetTaskStatus is a free data retrieval call binding the contract method 0x2bf6cc79.
//
// Solidity: function getTaskStatus(bytes32 taskHash) view returns(uint8)
func (_TaskMailbox *TaskMailboxCaller) GetTaskStatus(opts *bind.CallOpts, taskHash [32]byte) (uint8, error) {
	var out []interface{}
	err := _TaskMailbox.contract.Call(opts, &out, "getTaskStatus", taskHash)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetTaskStatus is a free data retrieval call binding the contract method 0x2bf6cc79.
//
// Solidity: function getTaskStatus(bytes32 taskHash) view returns(uint8)
func (_TaskMailbox *TaskMailboxSession) GetTaskStatus(taskHash [32]byte) (uint8, error) {
	return _TaskMailbox.Contract.GetTaskStatus(&_TaskMailbox.CallOpts, taskHash)
}

// GetTaskStatus is a free data retrieval call binding the contract method 0x2bf6cc79.
//
// Solidity: function getTaskStatus(bytes32 taskHash) view returns(uint8)
func (_TaskMailbox *TaskMailboxCallerSession) GetTaskStatus(taskHash [32]byte) (uint8, error) {
	return _TaskMailbox.Contract.GetTaskStatus(&_TaskMailbox.CallOpts, taskHash)
}

// IsAvsRegistered is a free data retrieval call binding the contract method 0xe3d276ab.
//
// Solidity: function isAvsRegistered(address avs) view returns(bool isRegistered)
func (_TaskMailbox *TaskMailboxCaller) IsAvsRegistered(opts *bind.CallOpts, avs common.Address) (bool, error) {
	var out []interface{}
	err := _TaskMailbox.contract.Call(opts, &out, "isAvsRegistered", avs)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsAvsRegistered is a free data retrieval call binding the contract method 0xe3d276ab.
//
// Solidity: function isAvsRegistered(address avs) view returns(bool isRegistered)
func (_TaskMailbox *TaskMailboxSession) IsAvsRegistered(avs common.Address) (bool, error) {
	return _TaskMailbox.Contract.IsAvsRegistered(&_TaskMailbox.CallOpts, avs)
}

// IsAvsRegistered is a free data retrieval call binding the contract method 0xe3d276ab.
//
// Solidity: function isAvsRegistered(address avs) view returns(bool isRegistered)
func (_TaskMailbox *TaskMailboxCallerSession) IsAvsRegistered(avs common.Address) (bool, error) {
	return _TaskMailbox.Contract.IsAvsRegistered(&_TaskMailbox.CallOpts, avs)
}

// IsExecutorOperatorSetRegistered is a free data retrieval call binding the contract method 0xfa2c0b37.
//
// Solidity: function isExecutorOperatorSetRegistered(bytes32 operatorSetKey) view returns(bool isRegistered)
func (_TaskMailbox *TaskMailboxCaller) IsExecutorOperatorSetRegistered(opts *bind.CallOpts, operatorSetKey [32]byte) (bool, error) {
	var out []interface{}
	err := _TaskMailbox.contract.Call(opts, &out, "isExecutorOperatorSetRegistered", operatorSetKey)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsExecutorOperatorSetRegistered is a free data retrieval call binding the contract method 0xfa2c0b37.
//
// Solidity: function isExecutorOperatorSetRegistered(bytes32 operatorSetKey) view returns(bool isRegistered)
func (_TaskMailbox *TaskMailboxSession) IsExecutorOperatorSetRegistered(operatorSetKey [32]byte) (bool, error) {
	return _TaskMailbox.Contract.IsExecutorOperatorSetRegistered(&_TaskMailbox.CallOpts, operatorSetKey)
}

// IsExecutorOperatorSetRegistered is a free data retrieval call binding the contract method 0xfa2c0b37.
//
// Solidity: function isExecutorOperatorSetRegistered(bytes32 operatorSetKey) view returns(bool isRegistered)
func (_TaskMailbox *TaskMailboxCallerSession) IsExecutorOperatorSetRegistered(operatorSetKey [32]byte) (bool, error) {
	return _TaskMailbox.Contract.IsExecutorOperatorSetRegistered(&_TaskMailbox.CallOpts, operatorSetKey)
}

// CancelTask is a paid mutator transaction binding the contract method 0xee8ca3b5.
//
// Solidity: function cancelTask(bytes32 taskHash) returns()
func (_TaskMailbox *TaskMailboxTransactor) CancelTask(opts *bind.TransactOpts, taskHash [32]byte) (*types.Transaction, error) {
	return _TaskMailbox.contract.Transact(opts, "cancelTask", taskHash)
}

// CancelTask is a paid mutator transaction binding the contract method 0xee8ca3b5.
//
// Solidity: function cancelTask(bytes32 taskHash) returns()
func (_TaskMailbox *TaskMailboxSession) CancelTask(taskHash [32]byte) (*types.Transaction, error) {
	return _TaskMailbox.Contract.CancelTask(&_TaskMailbox.TransactOpts, taskHash)
}

// CancelTask is a paid mutator transaction binding the contract method 0xee8ca3b5.
//
// Solidity: function cancelTask(bytes32 taskHash) returns()
func (_TaskMailbox *TaskMailboxTransactorSession) CancelTask(taskHash [32]byte) (*types.Transaction, error) {
	return _TaskMailbox.Contract.CancelTask(&_TaskMailbox.TransactOpts, taskHash)
}

// CreateTask is a paid mutator transaction binding the contract method 0x0443b7a0.
//
// Solidity: function createTask((address,uint96,(address,uint32),bytes) taskParams) returns(bytes32)
func (_TaskMailbox *TaskMailboxTransactor) CreateTask(opts *bind.TransactOpts, taskParams ITaskMailboxTypesTaskParams) (*types.Transaction, error) {
	return _TaskMailbox.contract.Transact(opts, "createTask", taskParams)
}

// CreateTask is a paid mutator transaction binding the contract method 0x0443b7a0.
//
// Solidity: function createTask((address,uint96,(address,uint32),bytes) taskParams) returns(bytes32)
func (_TaskMailbox *TaskMailboxSession) CreateTask(taskParams ITaskMailboxTypesTaskParams) (*types.Transaction, error) {
	return _TaskMailbox.Contract.CreateTask(&_TaskMailbox.TransactOpts, taskParams)
}

// CreateTask is a paid mutator transaction binding the contract method 0x0443b7a0.
//
// Solidity: function createTask((address,uint96,(address,uint32),bytes) taskParams) returns(bytes32)
func (_TaskMailbox *TaskMailboxTransactorSession) CreateTask(taskParams ITaskMailboxTypesTaskParams) (*types.Transaction, error) {
	return _TaskMailbox.Contract.CreateTask(&_TaskMailbox.TransactOpts, taskParams)
}

// RegisterAvs is a paid mutator transaction binding the contract method 0xef1a14d7.
//
// Solidity: function registerAvs(address avs, bool isRegistered) returns()
func (_TaskMailbox *TaskMailboxTransactor) RegisterAvs(opts *bind.TransactOpts, avs common.Address, isRegistered bool) (*types.Transaction, error) {
	return _TaskMailbox.contract.Transact(opts, "registerAvs", avs, isRegistered)
}

// RegisterAvs is a paid mutator transaction binding the contract method 0xef1a14d7.
//
// Solidity: function registerAvs(address avs, bool isRegistered) returns()
func (_TaskMailbox *TaskMailboxSession) RegisterAvs(avs common.Address, isRegistered bool) (*types.Transaction, error) {
	return _TaskMailbox.Contract.RegisterAvs(&_TaskMailbox.TransactOpts, avs, isRegistered)
}

// RegisterAvs is a paid mutator transaction binding the contract method 0xef1a14d7.
//
// Solidity: function registerAvs(address avs, bool isRegistered) returns()
func (_TaskMailbox *TaskMailboxTransactorSession) RegisterAvs(avs common.Address, isRegistered bool) (*types.Transaction, error) {
	return _TaskMailbox.Contract.RegisterAvs(&_TaskMailbox.TransactOpts, avs, isRegistered)
}

// SetAvsConfig is a paid mutator transaction binding the contract method 0x867f1267.
//
// Solidity: function setAvsConfig(address avs, (uint32,uint32[]) config) returns()
func (_TaskMailbox *TaskMailboxTransactor) SetAvsConfig(opts *bind.TransactOpts, avs common.Address, config ITaskMailboxTypesAvsConfig) (*types.Transaction, error) {
	return _TaskMailbox.contract.Transact(opts, "setAvsConfig", avs, config)
}

// SetAvsConfig is a paid mutator transaction binding the contract method 0x867f1267.
//
// Solidity: function setAvsConfig(address avs, (uint32,uint32[]) config) returns()
func (_TaskMailbox *TaskMailboxSession) SetAvsConfig(avs common.Address, config ITaskMailboxTypesAvsConfig) (*types.Transaction, error) {
	return _TaskMailbox.Contract.SetAvsConfig(&_TaskMailbox.TransactOpts, avs, config)
}

// SetAvsConfig is a paid mutator transaction binding the contract method 0x867f1267.
//
// Solidity: function setAvsConfig(address avs, (uint32,uint32[]) config) returns()
func (_TaskMailbox *TaskMailboxTransactorSession) SetAvsConfig(avs common.Address, config ITaskMailboxTypesAvsConfig) (*types.Transaction, error) {
	return _TaskMailbox.Contract.SetAvsConfig(&_TaskMailbox.TransactOpts, avs, config)
}

// SetExecutorOperatorSetTaskConfig is a paid mutator transaction binding the contract method 0x4e138f39.
//
// Solidity: function setExecutorOperatorSetTaskConfig((address,uint32) operatorSet, (address,address,address,address,uint96,uint16,bytes) config) returns()
func (_TaskMailbox *TaskMailboxTransactor) SetExecutorOperatorSetTaskConfig(opts *bind.TransactOpts, operatorSet OperatorSet, config ITaskMailboxTypesExecutorOperatorSetTaskConfig) (*types.Transaction, error) {
	return _TaskMailbox.contract.Transact(opts, "setExecutorOperatorSetTaskConfig", operatorSet, config)
}

// SetExecutorOperatorSetTaskConfig is a paid mutator transaction binding the contract method 0x4e138f39.
//
// Solidity: function setExecutorOperatorSetTaskConfig((address,uint32) operatorSet, (address,address,address,address,uint96,uint16,bytes) config) returns()
func (_TaskMailbox *TaskMailboxSession) SetExecutorOperatorSetTaskConfig(operatorSet OperatorSet, config ITaskMailboxTypesExecutorOperatorSetTaskConfig) (*types.Transaction, error) {
	return _TaskMailbox.Contract.SetExecutorOperatorSetTaskConfig(&_TaskMailbox.TransactOpts, operatorSet, config)
}

// SetExecutorOperatorSetTaskConfig is a paid mutator transaction binding the contract method 0x4e138f39.
//
// Solidity: function setExecutorOperatorSetTaskConfig((address,uint32) operatorSet, (address,address,address,address,uint96,uint16,bytes) config) returns()
func (_TaskMailbox *TaskMailboxTransactorSession) SetExecutorOperatorSetTaskConfig(operatorSet OperatorSet, config ITaskMailboxTypesExecutorOperatorSetTaskConfig) (*types.Transaction, error) {
	return _TaskMailbox.Contract.SetExecutorOperatorSetTaskConfig(&_TaskMailbox.TransactOpts, operatorSet, config)
}

// SubmitResult is a paid mutator transaction binding the contract method 0x3b433719.
//
// Solidity: function submitResult(bytes32 taskHash, (uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),uint32[],(uint32,bytes,((uint256,uint256),uint96[]))[]) cert, bytes result) returns()
func (_TaskMailbox *TaskMailboxTransactor) SubmitResult(opts *bind.TransactOpts, taskHash [32]byte, cert IBN254CertificateVerifierBN254Certificate, result []byte) (*types.Transaction, error) {
	return _TaskMailbox.contract.Transact(opts, "submitResult", taskHash, cert, result)
}

// SubmitResult is a paid mutator transaction binding the contract method 0x3b433719.
//
// Solidity: function submitResult(bytes32 taskHash, (uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),uint32[],(uint32,bytes,((uint256,uint256),uint96[]))[]) cert, bytes result) returns()
func (_TaskMailbox *TaskMailboxSession) SubmitResult(taskHash [32]byte, cert IBN254CertificateVerifierBN254Certificate, result []byte) (*types.Transaction, error) {
	return _TaskMailbox.Contract.SubmitResult(&_TaskMailbox.TransactOpts, taskHash, cert, result)
}

// SubmitResult is a paid mutator transaction binding the contract method 0x3b433719.
//
// Solidity: function submitResult(bytes32 taskHash, (uint32,bytes32,(uint256,uint256),(uint256[2],uint256[2]),uint32[],(uint32,bytes,((uint256,uint256),uint96[]))[]) cert, bytes result) returns()
func (_TaskMailbox *TaskMailboxTransactorSession) SubmitResult(taskHash [32]byte, cert IBN254CertificateVerifierBN254Certificate, result []byte) (*types.Transaction, error) {
	return _TaskMailbox.Contract.SubmitResult(&_TaskMailbox.TransactOpts, taskHash, cert, result)
}

// TaskMailboxAvsConfigSetIterator is returned from FilterAvsConfigSet and is used to iterate over the raw logs and unpacked data for AvsConfigSet events raised by the TaskMailbox contract.
type TaskMailboxAvsConfigSetIterator struct {
	Event *TaskMailboxAvsConfigSet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TaskMailboxAvsConfigSetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TaskMailboxAvsConfigSet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TaskMailboxAvsConfigSet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TaskMailboxAvsConfigSetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TaskMailboxAvsConfigSetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TaskMailboxAvsConfigSet represents a AvsConfigSet event raised by the TaskMailbox contract.
type TaskMailboxAvsConfigSet struct {
	Caller                  common.Address
	Avs                     common.Address
	AggregatorOperatorSetId uint32
	ExecutorOperatorSetIds  []uint32
	Raw                     types.Log // Blockchain specific contextual infos
}

// FilterAvsConfigSet is a free log retrieval operation binding the contract event 0xc5e4272bacf3a88a902bbb2920ed1308c295273ff00838766ed22d5e050087ca.
//
// Solidity: event AvsConfigSet(address indexed caller, address indexed avs, uint32 aggregatorOperatorSetId, uint32[] executorOperatorSetIds)
func (_TaskMailbox *TaskMailboxFilterer) FilterAvsConfigSet(opts *bind.FilterOpts, caller []common.Address, avs []common.Address) (*TaskMailboxAvsConfigSetIterator, error) {

	var callerRule []interface{}
	for _, callerItem := range caller {
		callerRule = append(callerRule, callerItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.FilterLogs(opts, "AvsConfigSet", callerRule, avsRule)
	if err != nil {
		return nil, err
	}
	return &TaskMailboxAvsConfigSetIterator{contract: _TaskMailbox.contract, event: "AvsConfigSet", logs: logs, sub: sub}, nil
}

// WatchAvsConfigSet is a free log subscription operation binding the contract event 0xc5e4272bacf3a88a902bbb2920ed1308c295273ff00838766ed22d5e050087ca.
//
// Solidity: event AvsConfigSet(address indexed caller, address indexed avs, uint32 aggregatorOperatorSetId, uint32[] executorOperatorSetIds)
func (_TaskMailbox *TaskMailboxFilterer) WatchAvsConfigSet(opts *bind.WatchOpts, sink chan<- *TaskMailboxAvsConfigSet, caller []common.Address, avs []common.Address) (event.Subscription, error) {

	var callerRule []interface{}
	for _, callerItem := range caller {
		callerRule = append(callerRule, callerItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.WatchLogs(opts, "AvsConfigSet", callerRule, avsRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TaskMailboxAvsConfigSet)
				if err := _TaskMailbox.contract.UnpackLog(event, "AvsConfigSet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAvsConfigSet is a log parse operation binding the contract event 0xc5e4272bacf3a88a902bbb2920ed1308c295273ff00838766ed22d5e050087ca.
//
// Solidity: event AvsConfigSet(address indexed caller, address indexed avs, uint32 aggregatorOperatorSetId, uint32[] executorOperatorSetIds)
func (_TaskMailbox *TaskMailboxFilterer) ParseAvsConfigSet(log types.Log) (*TaskMailboxAvsConfigSet, error) {
	event := new(TaskMailboxAvsConfigSet)
	if err := _TaskMailbox.contract.UnpackLog(event, "AvsConfigSet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TaskMailboxAvsRegisteredIterator is returned from FilterAvsRegistered and is used to iterate over the raw logs and unpacked data for AvsRegistered events raised by the TaskMailbox contract.
type TaskMailboxAvsRegisteredIterator struct {
	Event *TaskMailboxAvsRegistered // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TaskMailboxAvsRegisteredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TaskMailboxAvsRegistered)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TaskMailboxAvsRegistered)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TaskMailboxAvsRegisteredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TaskMailboxAvsRegisteredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TaskMailboxAvsRegistered represents a AvsRegistered event raised by the TaskMailbox contract.
type TaskMailboxAvsRegistered struct {
	Caller       common.Address
	Avs          common.Address
	IsRegistered bool
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterAvsRegistered is a free log retrieval operation binding the contract event 0x8157f276d267ffc7b002873c20b83d9bd091016e124bf541534269a907029562.
//
// Solidity: event AvsRegistered(address indexed caller, address indexed avs, bool isRegistered)
func (_TaskMailbox *TaskMailboxFilterer) FilterAvsRegistered(opts *bind.FilterOpts, caller []common.Address, avs []common.Address) (*TaskMailboxAvsRegisteredIterator, error) {

	var callerRule []interface{}
	for _, callerItem := range caller {
		callerRule = append(callerRule, callerItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.FilterLogs(opts, "AvsRegistered", callerRule, avsRule)
	if err != nil {
		return nil, err
	}
	return &TaskMailboxAvsRegisteredIterator{contract: _TaskMailbox.contract, event: "AvsRegistered", logs: logs, sub: sub}, nil
}

// WatchAvsRegistered is a free log subscription operation binding the contract event 0x8157f276d267ffc7b002873c20b83d9bd091016e124bf541534269a907029562.
//
// Solidity: event AvsRegistered(address indexed caller, address indexed avs, bool isRegistered)
func (_TaskMailbox *TaskMailboxFilterer) WatchAvsRegistered(opts *bind.WatchOpts, sink chan<- *TaskMailboxAvsRegistered, caller []common.Address, avs []common.Address) (event.Subscription, error) {

	var callerRule []interface{}
	for _, callerItem := range caller {
		callerRule = append(callerRule, callerItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.WatchLogs(opts, "AvsRegistered", callerRule, avsRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TaskMailboxAvsRegistered)
				if err := _TaskMailbox.contract.UnpackLog(event, "AvsRegistered", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAvsRegistered is a log parse operation binding the contract event 0x8157f276d267ffc7b002873c20b83d9bd091016e124bf541534269a907029562.
//
// Solidity: event AvsRegistered(address indexed caller, address indexed avs, bool isRegistered)
func (_TaskMailbox *TaskMailboxFilterer) ParseAvsRegistered(log types.Log) (*TaskMailboxAvsRegistered, error) {
	event := new(TaskMailboxAvsRegistered)
	if err := _TaskMailbox.contract.UnpackLog(event, "AvsRegistered", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TaskMailboxExecutorOperatorSetTaskConfigSetIterator is returned from FilterExecutorOperatorSetTaskConfigSet and is used to iterate over the raw logs and unpacked data for ExecutorOperatorSetTaskConfigSet events raised by the TaskMailbox contract.
type TaskMailboxExecutorOperatorSetTaskConfigSetIterator struct {
	Event *TaskMailboxExecutorOperatorSetTaskConfigSet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TaskMailboxExecutorOperatorSetTaskConfigSetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TaskMailboxExecutorOperatorSetTaskConfigSet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TaskMailboxExecutorOperatorSetTaskConfigSet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TaskMailboxExecutorOperatorSetTaskConfigSetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TaskMailboxExecutorOperatorSetTaskConfigSetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TaskMailboxExecutorOperatorSetTaskConfigSet represents a ExecutorOperatorSetTaskConfigSet event raised by the TaskMailbox contract.
type TaskMailboxExecutorOperatorSetTaskConfigSet struct {
	Caller                common.Address
	Avs                   common.Address
	ExecutorOperatorSetId uint32
	Config                ITaskMailboxTypesExecutorOperatorSetTaskConfig
	Raw                   types.Log // Blockchain specific contextual infos
}

// FilterExecutorOperatorSetTaskConfigSet is a free log retrieval operation binding the contract event 0xb4758fe2b1355bebcbc78c10619457fcaa54e85fb3b994318238b92a097f5425.
//
// Solidity: event ExecutorOperatorSetTaskConfigSet(address indexed caller, address indexed avs, uint32 indexed executorOperatorSetId, (address,address,address,address,uint96,uint16,bytes) config)
func (_TaskMailbox *TaskMailboxFilterer) FilterExecutorOperatorSetTaskConfigSet(opts *bind.FilterOpts, caller []common.Address, avs []common.Address, executorOperatorSetId []uint32) (*TaskMailboxExecutorOperatorSetTaskConfigSetIterator, error) {

	var callerRule []interface{}
	for _, callerItem := range caller {
		callerRule = append(callerRule, callerItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}
	var executorOperatorSetIdRule []interface{}
	for _, executorOperatorSetIdItem := range executorOperatorSetId {
		executorOperatorSetIdRule = append(executorOperatorSetIdRule, executorOperatorSetIdItem)
	}

	logs, sub, err := _TaskMailbox.contract.FilterLogs(opts, "ExecutorOperatorSetTaskConfigSet", callerRule, avsRule, executorOperatorSetIdRule)
	if err != nil {
		return nil, err
	}
	return &TaskMailboxExecutorOperatorSetTaskConfigSetIterator{contract: _TaskMailbox.contract, event: "ExecutorOperatorSetTaskConfigSet", logs: logs, sub: sub}, nil
}

// WatchExecutorOperatorSetTaskConfigSet is a free log subscription operation binding the contract event 0xb4758fe2b1355bebcbc78c10619457fcaa54e85fb3b994318238b92a097f5425.
//
// Solidity: event ExecutorOperatorSetTaskConfigSet(address indexed caller, address indexed avs, uint32 indexed executorOperatorSetId, (address,address,address,address,uint96,uint16,bytes) config)
func (_TaskMailbox *TaskMailboxFilterer) WatchExecutorOperatorSetTaskConfigSet(opts *bind.WatchOpts, sink chan<- *TaskMailboxExecutorOperatorSetTaskConfigSet, caller []common.Address, avs []common.Address, executorOperatorSetId []uint32) (event.Subscription, error) {

	var callerRule []interface{}
	for _, callerItem := range caller {
		callerRule = append(callerRule, callerItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}
	var executorOperatorSetIdRule []interface{}
	for _, executorOperatorSetIdItem := range executorOperatorSetId {
		executorOperatorSetIdRule = append(executorOperatorSetIdRule, executorOperatorSetIdItem)
	}

	logs, sub, err := _TaskMailbox.contract.WatchLogs(opts, "ExecutorOperatorSetTaskConfigSet", callerRule, avsRule, executorOperatorSetIdRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TaskMailboxExecutorOperatorSetTaskConfigSet)
				if err := _TaskMailbox.contract.UnpackLog(event, "ExecutorOperatorSetTaskConfigSet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseExecutorOperatorSetTaskConfigSet is a log parse operation binding the contract event 0xb4758fe2b1355bebcbc78c10619457fcaa54e85fb3b994318238b92a097f5425.
//
// Solidity: event ExecutorOperatorSetTaskConfigSet(address indexed caller, address indexed avs, uint32 indexed executorOperatorSetId, (address,address,address,address,uint96,uint16,bytes) config)
func (_TaskMailbox *TaskMailboxFilterer) ParseExecutorOperatorSetTaskConfigSet(log types.Log) (*TaskMailboxExecutorOperatorSetTaskConfigSet, error) {
	event := new(TaskMailboxExecutorOperatorSetTaskConfigSet)
	if err := _TaskMailbox.contract.UnpackLog(event, "ExecutorOperatorSetTaskConfigSet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TaskMailboxTaskCanceledIterator is returned from FilterTaskCanceled and is used to iterate over the raw logs and unpacked data for TaskCanceled events raised by the TaskMailbox contract.
type TaskMailboxTaskCanceledIterator struct {
	Event *TaskMailboxTaskCanceled // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TaskMailboxTaskCanceledIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TaskMailboxTaskCanceled)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TaskMailboxTaskCanceled)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TaskMailboxTaskCanceledIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TaskMailboxTaskCanceledIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TaskMailboxTaskCanceled represents a TaskCanceled event raised by the TaskMailbox contract.
type TaskMailboxTaskCanceled struct {
	Creator               common.Address
	TaskHash              [32]byte
	Avs                   common.Address
	ExecutorOperatorSetId uint32
	Raw                   types.Log // Blockchain specific contextual infos
}

// FilterTaskCanceled is a free log retrieval operation binding the contract event 0x3e701c33cc740e1f61ccdcafcf97e5e65a0d7f4617aed0e8ae51be092ac18a59.
//
// Solidity: event TaskCanceled(address indexed creator, bytes32 indexed taskHash, address indexed avs, uint32 executorOperatorSetId)
func (_TaskMailbox *TaskMailboxFilterer) FilterTaskCanceled(opts *bind.FilterOpts, creator []common.Address, taskHash [][32]byte, avs []common.Address) (*TaskMailboxTaskCanceledIterator, error) {

	var creatorRule []interface{}
	for _, creatorItem := range creator {
		creatorRule = append(creatorRule, creatorItem)
	}
	var taskHashRule []interface{}
	for _, taskHashItem := range taskHash {
		taskHashRule = append(taskHashRule, taskHashItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.FilterLogs(opts, "TaskCanceled", creatorRule, taskHashRule, avsRule)
	if err != nil {
		return nil, err
	}
	return &TaskMailboxTaskCanceledIterator{contract: _TaskMailbox.contract, event: "TaskCanceled", logs: logs, sub: sub}, nil
}

// WatchTaskCanceled is a free log subscription operation binding the contract event 0x3e701c33cc740e1f61ccdcafcf97e5e65a0d7f4617aed0e8ae51be092ac18a59.
//
// Solidity: event TaskCanceled(address indexed creator, bytes32 indexed taskHash, address indexed avs, uint32 executorOperatorSetId)
func (_TaskMailbox *TaskMailboxFilterer) WatchTaskCanceled(opts *bind.WatchOpts, sink chan<- *TaskMailboxTaskCanceled, creator []common.Address, taskHash [][32]byte, avs []common.Address) (event.Subscription, error) {

	var creatorRule []interface{}
	for _, creatorItem := range creator {
		creatorRule = append(creatorRule, creatorItem)
	}
	var taskHashRule []interface{}
	for _, taskHashItem := range taskHash {
		taskHashRule = append(taskHashRule, taskHashItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.WatchLogs(opts, "TaskCanceled", creatorRule, taskHashRule, avsRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TaskMailboxTaskCanceled)
				if err := _TaskMailbox.contract.UnpackLog(event, "TaskCanceled", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTaskCanceled is a log parse operation binding the contract event 0x3e701c33cc740e1f61ccdcafcf97e5e65a0d7f4617aed0e8ae51be092ac18a59.
//
// Solidity: event TaskCanceled(address indexed creator, bytes32 indexed taskHash, address indexed avs, uint32 executorOperatorSetId)
func (_TaskMailbox *TaskMailboxFilterer) ParseTaskCanceled(log types.Log) (*TaskMailboxTaskCanceled, error) {
	event := new(TaskMailboxTaskCanceled)
	if err := _TaskMailbox.contract.UnpackLog(event, "TaskCanceled", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TaskMailboxTaskCreatedIterator is returned from FilterTaskCreated and is used to iterate over the raw logs and unpacked data for TaskCreated events raised by the TaskMailbox contract.
type TaskMailboxTaskCreatedIterator struct {
	Event *TaskMailboxTaskCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TaskMailboxTaskCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TaskMailboxTaskCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TaskMailboxTaskCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TaskMailboxTaskCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TaskMailboxTaskCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TaskMailboxTaskCreated represents a TaskCreated event raised by the TaskMailbox contract.
type TaskMailboxTaskCreated struct {
	Creator               common.Address
	TaskHash              [32]byte
	Avs                   common.Address
	ExecutorOperatorSetId uint32
	RefundCollector       common.Address
	AvsFee                *big.Int
	TaskDeadline          *big.Int
	Payload               []byte
	Raw                   types.Log // Blockchain specific contextual infos
}

// FilterTaskCreated is a free log retrieval operation binding the contract event 0x4a09af06a0e08fd1c053a8b400de7833019c88066be8a2d3b3b17174a74fe317.
//
// Solidity: event TaskCreated(address indexed creator, bytes32 indexed taskHash, address indexed avs, uint32 executorOperatorSetId, address refundCollector, uint96 avsFee, uint256 taskDeadline, bytes payload)
func (_TaskMailbox *TaskMailboxFilterer) FilterTaskCreated(opts *bind.FilterOpts, creator []common.Address, taskHash [][32]byte, avs []common.Address) (*TaskMailboxTaskCreatedIterator, error) {

	var creatorRule []interface{}
	for _, creatorItem := range creator {
		creatorRule = append(creatorRule, creatorItem)
	}
	var taskHashRule []interface{}
	for _, taskHashItem := range taskHash {
		taskHashRule = append(taskHashRule, taskHashItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.FilterLogs(opts, "TaskCreated", creatorRule, taskHashRule, avsRule)
	if err != nil {
		return nil, err
	}
	return &TaskMailboxTaskCreatedIterator{contract: _TaskMailbox.contract, event: "TaskCreated", logs: logs, sub: sub}, nil
}

// WatchTaskCreated is a free log subscription operation binding the contract event 0x4a09af06a0e08fd1c053a8b400de7833019c88066be8a2d3b3b17174a74fe317.
//
// Solidity: event TaskCreated(address indexed creator, bytes32 indexed taskHash, address indexed avs, uint32 executorOperatorSetId, address refundCollector, uint96 avsFee, uint256 taskDeadline, bytes payload)
func (_TaskMailbox *TaskMailboxFilterer) WatchTaskCreated(opts *bind.WatchOpts, sink chan<- *TaskMailboxTaskCreated, creator []common.Address, taskHash [][32]byte, avs []common.Address) (event.Subscription, error) {

	var creatorRule []interface{}
	for _, creatorItem := range creator {
		creatorRule = append(creatorRule, creatorItem)
	}
	var taskHashRule []interface{}
	for _, taskHashItem := range taskHash {
		taskHashRule = append(taskHashRule, taskHashItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.WatchLogs(opts, "TaskCreated", creatorRule, taskHashRule, avsRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TaskMailboxTaskCreated)
				if err := _TaskMailbox.contract.UnpackLog(event, "TaskCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTaskCreated is a log parse operation binding the contract event 0x4a09af06a0e08fd1c053a8b400de7833019c88066be8a2d3b3b17174a74fe317.
//
// Solidity: event TaskCreated(address indexed creator, bytes32 indexed taskHash, address indexed avs, uint32 executorOperatorSetId, address refundCollector, uint96 avsFee, uint256 taskDeadline, bytes payload)
func (_TaskMailbox *TaskMailboxFilterer) ParseTaskCreated(log types.Log) (*TaskMailboxTaskCreated, error) {
	event := new(TaskMailboxTaskCreated)
	if err := _TaskMailbox.contract.UnpackLog(event, "TaskCreated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TaskMailboxTaskVerifiedIterator is returned from FilterTaskVerified and is used to iterate over the raw logs and unpacked data for TaskVerified events raised by the TaskMailbox contract.
type TaskMailboxTaskVerifiedIterator struct {
	Event *TaskMailboxTaskVerified // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TaskMailboxTaskVerifiedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TaskMailboxTaskVerified)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TaskMailboxTaskVerified)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TaskMailboxTaskVerifiedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TaskMailboxTaskVerifiedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TaskMailboxTaskVerified represents a TaskVerified event raised by the TaskMailbox contract.
type TaskMailboxTaskVerified struct {
	Aggregator            common.Address
	TaskHash              [32]byte
	Avs                   common.Address
	ExecutorOperatorSetId uint32
	Result                []byte
	Raw                   types.Log // Blockchain specific contextual infos
}

// FilterTaskVerified is a free log retrieval operation binding the contract event 0xd7eb53a86d7419ffc42bf17e0a61b4a2a8ab7f2e62c19368cee7d8822ea9f453.
//
// Solidity: event TaskVerified(address indexed aggregator, bytes32 indexed taskHash, address indexed avs, uint32 executorOperatorSetId, bytes result)
func (_TaskMailbox *TaskMailboxFilterer) FilterTaskVerified(opts *bind.FilterOpts, aggregator []common.Address, taskHash [][32]byte, avs []common.Address) (*TaskMailboxTaskVerifiedIterator, error) {

	var aggregatorRule []interface{}
	for _, aggregatorItem := range aggregator {
		aggregatorRule = append(aggregatorRule, aggregatorItem)
	}
	var taskHashRule []interface{}
	for _, taskHashItem := range taskHash {
		taskHashRule = append(taskHashRule, taskHashItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.FilterLogs(opts, "TaskVerified", aggregatorRule, taskHashRule, avsRule)
	if err != nil {
		return nil, err
	}
	return &TaskMailboxTaskVerifiedIterator{contract: _TaskMailbox.contract, event: "TaskVerified", logs: logs, sub: sub}, nil
}

// WatchTaskVerified is a free log subscription operation binding the contract event 0xd7eb53a86d7419ffc42bf17e0a61b4a2a8ab7f2e62c19368cee7d8822ea9f453.
//
// Solidity: event TaskVerified(address indexed aggregator, bytes32 indexed taskHash, address indexed avs, uint32 executorOperatorSetId, bytes result)
func (_TaskMailbox *TaskMailboxFilterer) WatchTaskVerified(opts *bind.WatchOpts, sink chan<- *TaskMailboxTaskVerified, aggregator []common.Address, taskHash [][32]byte, avs []common.Address) (event.Subscription, error) {

	var aggregatorRule []interface{}
	for _, aggregatorItem := range aggregator {
		aggregatorRule = append(aggregatorRule, aggregatorItem)
	}
	var taskHashRule []interface{}
	for _, taskHashItem := range taskHash {
		taskHashRule = append(taskHashRule, taskHashItem)
	}
	var avsRule []interface{}
	for _, avsItem := range avs {
		avsRule = append(avsRule, avsItem)
	}

	logs, sub, err := _TaskMailbox.contract.WatchLogs(opts, "TaskVerified", aggregatorRule, taskHashRule, avsRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TaskMailboxTaskVerified)
				if err := _TaskMailbox.contract.UnpackLog(event, "TaskVerified", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTaskVerified is a log parse operation binding the contract event 0xd7eb53a86d7419ffc42bf17e0a61b4a2a8ab7f2e62c19368cee7d8822ea9f453.
//
// Solidity: event TaskVerified(address indexed aggregator, bytes32 indexed taskHash, address indexed avs, uint32 executorOperatorSetId, bytes result)
func (_TaskMailbox *TaskMailboxFilterer) ParseTaskVerified(log types.Log) (*TaskMailboxTaskVerified, error) {
	event := new(TaskMailboxTaskVerified)
	if err := _TaskMailbox.contract.UnpackLog(event, "TaskVerified", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
