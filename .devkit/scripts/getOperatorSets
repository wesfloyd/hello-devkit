#!/usr/bin/env bash
set -e

# source in helper functions
source "$( dirname "${BASH_SOURCE[0]}" )/helpers/helpers.sh"


# Check if context parameter is provided
if [ -z "$1" ]; then
    log "Error: Missing context parameter"
    log "Usage: ./getOperatorSets '{\"version\":\"0.0.1\",\"context\":{...}}'"
    exit 1
fi

# Parse the JSON context
CONTEXT="$1"

# Check for required tools
ensureJq
ensureYq

# Extract environment from context
ENVIRONMENT=$(echo "$CONTEXT" | jq -r '.context.name')

if [ "$ENVIRONMENT" == "null" ] || [ -z "$ENVIRONMENT" ]; then
    log "Error: Missing name (environment) in context"
    exit 1
fi

# Check if the template-specific AVS environment YAML file exists
ENVIRONMENT_YAML_FILE=".hourglass/context/${ENVIRONMENT}.yaml"
if [ ! -f "$ENVIRONMENT_YAML_FILE" ]; then
    log "Error: AVS environment file ${ENVIRONMENT_YAML_FILE} does not exist"
    exit 1
fi

log "Reading operator sets from ${ENVIRONMENT_YAML_FILE}..."

# Extract operator sets from YAML
# Get all operator sets as JSON array
OPERATOR_SETS=$(yq -o=json '.operatorSets[]' "$ENVIRONMENT_YAML_FILE")

if [ -z "$OPERATOR_SETS" ]; then
    log "Error: No operator sets found in ${ENVIRONMENT_YAML_FILE}"
    exit 1
fi

# Count number of operator sets
NUM_OPERATOR_SETS=$(echo "$OPERATOR_SETS" | jq -s 'length')
log "Found $NUM_OPERATOR_SETS operator sets"

# Transform the operator sets data to match the required format
TRANSFORMED_SETS=$(echo "$OPERATOR_SETS" | jq -s 'map({
    operator_set_id: .id,
    strategies: .strategies | map({ strategy: . })
})')

# Create the final JSON structure
RESULT=$(jq -n --argjson sets "$TRANSFORMED_SETS" '{ operator_sets: $sets }')

# Validate the result
if [ -z "$RESULT" ] || [ "$RESULT" == "null" ]; then
    log "Error: Failed to create a valid operator sets JSON"
    exit 1
fi

log "Successfully extracted operator sets information."

# Print only the final JSON to stdout
echo "$RESULT" | jq -c . 
